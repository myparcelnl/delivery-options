import {
  AUSTRIA,
  BELGIUM,
  BULGARIA,
  CZECH_REPUBLIC,
  DENMARK,
  ESTONIA,
  FINLAND,
  FRANCE,
  GERMANY,
  GREECE,
  HUNGARY,
  IRELAND,
  ITALY,
  LATVIA,
  LIECHTENSTEIN,
  LITHUANIA,
  LUXEMBOURG,
  NETHERLANDS,
  POLAND,
  PORTUGAL,
  ROMANIA,
  SLOVAKIA,
  SLOVENIA,
  SPAIN,
  SWEDEN,
  UNITED_KINGDOM,
} from '@myparcel/constants/countries';
import {CarrierName, DeliveryTypeName, PackageTypeName, ShipmentOptionName} from '@myparcel/constants';
import {type PropositionConfiguration} from '../types';
import {AddressField, CarrierSetting, SubscriptionType, CustomDeliveryType} from '../data';

// eslint-disable-next-line max-lines-per-function
export const getSendMyParcelConfig = (): PropositionConfiguration => ({
  carriers: [
    {
      name: CarrierName.Bpost,
      subscription: SubscriptionType.Never,
      packageTypes: [PackageTypeName.Package, PackageTypeName.Mailbox],
      deliveryTypes: [DeliveryTypeName.Standard, DeliveryTypeName.Pickup, CustomDeliveryType.Saturday],
      deliveryCountries: [BELGIUM, NETHERLANDS],
      pickupCountries: [BELGIUM, NETHERLANDS],
      features: [CarrierSetting.DeliveryDaysWindow, CarrierSetting.DropOffDays, CarrierSetting.DropOffDelay],
      addressFields: [AddressField.PostalCode, AddressField.Street, AddressField.City],
      shipmentOptionsPerPackageType: {
        [PackageTypeName.Package]: [ShipmentOptionName.Signature],
      },
      fakeDelivery: true,
      /**
       * API returns a 500 error when package_type is passed, even though it's valid for belgie + bpost.
       */
      unsupportedParameters: ['package_type'],
    },
    {
      name: CarrierName.PostNl,
      subscription: SubscriptionType.Never,
      packageTypes: [PackageTypeName.Package],
      deliveryTypes: [DeliveryTypeName.Standard, DeliveryTypeName.Pickup, CustomDeliveryType.Saturday],
      deliveryCountries: [BELGIUM, NETHERLANDS],
      pickupCountries: [BELGIUM, NETHERLANDS],
      shipmentOptionsPerPackageType: {
        [PackageTypeName.Package]: [ShipmentOptionName.OnlyRecipient, ShipmentOptionName.Signature],
        [PackageTypeName.PackageSmall]: [ShipmentOptionName.OnlyRecipient, ShipmentOptionName.Signature],
      },
      features: [CarrierSetting.DeliveryDaysWindow, CarrierSetting.DropOffDays, CarrierSetting.DropOffDelay],
      fakeDelivery: true,
    },
    {
      name: CarrierName.Dpd,
      subscription: SubscriptionType.Never,
      packageTypes: [PackageTypeName.Package],
      deliveryTypes: [DeliveryTypeName.Standard, DeliveryTypeName.Pickup],
      deliveryCountries: [
        AUSTRIA,
        BELGIUM,
        BULGARIA,
        CZECH_REPUBLIC,
        DENMARK,
        ESTONIA,
        FINLAND,
        FRANCE,
        GERMANY,
        GREECE,
        HUNGARY,
        IRELAND,
        ITALY,
        LATVIA,
        LIECHTENSTEIN,
        LITHUANIA,
        LUXEMBOURG,
        NETHERLANDS,
        POLAND,
        PORTUGAL,
        ROMANIA,
        SLOVAKIA,
        SLOVENIA,
        SPAIN,
        SWEDEN,
      ],
      pickupCountries: [
        AUSTRIA,
        BELGIUM,
        CZECH_REPUBLIC,
        DENMARK,
        ESTONIA,
        FINLAND,
        FRANCE,
        GERMANY,
        HUNGARY,
        LATVIA,
        LITHUANIA,
        LUXEMBOURG,
        NETHERLANDS,
        POLAND,
        PORTUGAL,
        SLOVAKIA,
        SLOVENIA,
        SPAIN,
        UNITED_KINGDOM,
      ],
      features: [CarrierSetting.DropOffDays, CarrierSetting.DropOffDelay],
      addressFields: [AddressField.PostalCode, AddressField.Street, AddressField.City],
    },
  ],
});
